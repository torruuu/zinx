---
import { getFilteredCredits } from '@/composables/getFilteredCredits'
import { getLangFromUrl, useTranslations } from '@/i18n/utils'
import type { Credits, CrewMember } from '@/types'

interface Props {
  mediaCreatedBy: CrewMember[]
  mediaOverview: string
  mediaCredits: Credits
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const { mediaCreatedBy, mediaOverview, mediaCredits } = Astro.props
const filteredCast = getFilteredCredits(mediaCredits, lang)
---

<section class="media-description">
  {
    mediaOverview && (
      <article class="media-description__overview">
        <h3 class="media-description__overview-title">{t('media-detail.synopsis')}</h3>
        <p class="media-description__description">{mediaOverview}</p>
      </article>
    )
  }
  <div class="media-description__cast-container">
    {
      mediaCreatedBy?.length > 0 && (
        <article class="media-description__cast-article">
          <h3 class="media-description__subtitle">{t('media-detail.creator')}</h3>
          <p class="media-description__sub-description">
            {mediaCreatedBy.map((member) => member.name).join(', ')}
          </p>
        </article>
      )
    }
    {
      filteredCast.map(
        (department) =>
          department.members && (
            <article class="media-description__cast-article">
              <h3 class="media-description__subtitle">{department.title}:</h3>
              <p class="media-description__sub-description">{department.members}</p>
            </article>
          ),
      )
    }
  </div>
</section>

<style lang="scss">
  .media-description {
    padding: map-get($map: $sizes, $key: s-general-padding);
    padding-top: 3rem;
    padding-bottom: 3rem;
    @include responsive() {
      padding: map-get($map: $sizes, $key: s-general-padding-mobile);
      padding-top: 2rem;
      padding-bottom: 2rem;
    }
    &__overview-title {
      padding: 0 0 1rem;
    }
    &__cast-container {
      padding: 1rem 0 0;
      @include flex(
        $direction: column,
        $justify-content: flex-start,
        $align-items: flex-start
      );
      gap: 0.5rem;
    }
    &__cast-article {
      max-width: 100%;
      width: max-content;
      @include flex($justify-content: flex-start);
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    &__subtitle {
      color: map-get($map: $colors, $key: c-dark-gray);
      font-size: map-get($map: $font-size, $key: fs-small);
      font-family: map-get($map: $fonts, $key: f-font-light);
      @include responsive() {
        font-size: map-get($map: $font-size, $key: fs-extra-small);
      }
    }
    &__sub-description {
      font-size: map-get($map: $font-size, $key: fs-extra-small);
      @include responsive() {
        font-size: map-get($map: $font-size, $key: fs-super-small);
      }
    }
  }
</style>
